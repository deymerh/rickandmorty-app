{"version":3,"sources":["components/Header.jsx","config/index.js","hooks/useFetch.js","components/CardItem.jsx","components/Home.jsx","components/CharacterId.jsx","components/Episode.jsx","components/App.jsx","globalStyle.js","index.js"],"names":["Header","HeaderComponent","className","to","styled","header","API","useFetch","url","isMounted","useRef","useState","loading","error","data","state","setState","useEffect","current","fetch","then","res","json","catch","console","log","CardItem","id","image","name","Character","src","alt","article","Home","page","setPage","characters","style","display","justifyContent","alignItems","height","position","width","dataLength","results","length","next","inverse","hasMore","loader","scrollThreshold","MainComponent","map","character","div","CharacterId","useParams","CharacterIdStyle","episode","status","species","gender","origin","location","i","urlShort","slice","replace","urlTo","Episode","EpisodeCard","air_date","created","App","AppComponent","exact","path","component","main","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d67350a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Header = () => {\n  return (\n    <HeaderComponent>\n      <div className=\"Header-log\">\n        <h1>\n          <Link to=\"/\">\n            Rick and Morthy\n          </Link>\n        </h1>\n      </div>\n      <div className=\"Header-nav\">\n        <Link to=\"/\">\n          About\n        </Link>\n      </div>\n    </HeaderComponent>\n  )\n}\n\nconst HeaderComponent = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  a {\n    text-decoration: none;\n    color: #15302c;\n  }\n`;","export const API = 'https://rickandmortyapi.com/api';","import { useEffect, useRef, useState } from 'react';\n\nexport const useFetch = (url) => {\n  const isMounted = useRef(true);\n  const [state, setState] = useState({ loading: true, error: null, data: null });\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    }\n  }, [])\n\n  useEffect(() => {\n    setState({\n      loading: true,\n      error: null,\n      data: null\n    })\n    fetch(url)\n      .then(res => res.json())\n      .then((data) => {\n        if (isMounted.current) {\n          setState({\n            loading: false,\n            error: null,\n            data: data\n            // data: [...data, Object.values(results)]\n          })\n        }\n      })\n      .catch(() => {\n        console.log('Entre al catch')\n        setState({\n          data: null,\n          loading: false,\n          error: 'No se pudo cargar la info',\n        })\n      })\n  }, [url])\n  return state;\n\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardItem = ({ id, image, name }) => {\n  return (\n    <Character>\n      <Link to={`/character/${id}`}>\n        <img src={image} alt={name} />\n        <h2>{name}</h2>\n      </Link>\n    </Character>\n  )\n};\n\nconst Character = styled.article`\n  text-decoration: none;\n  box-shadow: 8px 14px 38px rgba(39, 44, 49, 0.06),\n    1px 3px 8px rgba(39, 44, 49, 0.03);\n  border-radius: 5px;\n  margin: 0 0 20px 0;\n  display: block;\n  animation-duration: 2s;\n  animation-name: fade;\n  :hover{\n    h2{\n      color: red;\n    }\n  }\n  img {\n    width: 100%;\n    height: auto;\n    border-radius: 5px 5px 0 0;\n  }\n  h2 {\n    font-size: 18px;\n    font-weight: 300;\n    padding: 5px 10px;\n    display: flex;\n    justify-content: space-between;\n  }\n  a {\n    text-decoration: none;\n    color: #026c86;\n  }\n`;\n","import React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { useFetch } from '../hooks/useFetch';\nimport { CardItem } from './CardItem';\n\nexport const Home = () => {\n\n  const [page, setPage] = useState(1);\n  const { loading, data: characters } = useFetch(`${API}/character/?page=${page}`);\n\n  return loading ? <p style={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '96vh',\n    position: 'absolute',\n    width: '97vw'\n  }}>Loading...</p> : (\n      <InfiniteScroll\n        dataLength={characters.results.length}\n        next={() => setPage(page + 1)}\n        inverse={false}\n        hasMore={true}\n        loader={<h4 style={{ display: 'flex', justifyContent: 'center' }}>Cargando...</h4>}\n        scrollThreshold=\"40px\"\n      >\n        <MainComponent>\n          {\n            characters?.results.map(character => {\n              return (\n                <CardItem\n                  key={character.id}\n                  id={character.id}\n                  image={character.image}\n                  name={character.name}\n                />\n              )\n            })\n          }\n        </MainComponent>\n      </InfiniteScroll>\n    )\n};\n\nconst MainComponent = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n  grid-row-gap: 1.5em;\n  display: grid;\n`;\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { useFetch } from '../hooks/useFetch';\n\nexport const CharacterId = () => {\n  let { id } = useParams();\n  const { data: character } = useFetch(`${API}/character/${id}`);\n  return (\n    <>\n      <CharacterIdStyle>\n        <article className=\"Characters-card\">\n          <img src={character?.image} alt={character?.name} />\n          <h2>{character?.name}</h2>\n        </article>\n        <article className=\"Characters-card\">\n          <h3>Episodes: <span>{character?.episode?.length}</span> </h3>\n          <h3>Status: <span>{character?.status}</span> </h3>\n          <h3>Species: <span>{character?.species}</span> </h3>\n          <h3>Genger: <span>{character?.gender}</span> </h3>\n          <h3>Origin: <span>{character?.origin.name}</span> </h3>\n          <h3>Last location: <span>{character?.location?.name}</span> </h3>\n        </article>\n      </CharacterIdStyle>\n      {\n        character?.episode?.map((url, i) => {\n          let urlShort = url.slice(32).replace('/', ' nÂº ');\n          let urlTo = url.slice(32);\n          return (\n            <ul key={i}>\n              <Link to={`/${urlTo}`}>\n                <li>{i + 1} {urlShort}</li>\n              </Link>\n            </ul>\n          )\n        })\n      }\n    </>\n  )\n};\n\nconst CharacterIdStyle = styled.div`\n  grid-template-columns: 1fr 2fr;\n  grid-gap: 1.5rem;\n  grid-row-gap: 1.5em;\n  display: grid;\n.Characters-card {\n  text-decoration: none;\n  box-shadow: 8px 14px 38px rgba(39, 44, 49, 0.06),\n    1px 3px 8px rgba(39, 44, 49, 0.03);\n  border-radius: 5px;\n  margin: 0 0 20px 0;\n  display: block;\n  animation-duration: 2s;\n  animation-name: fade;\n}\n.Characters-card img {\n  width: 100%;\n  height: auto;\n  border-radius: 5px 5px 0 0;\n}\n.Characters-card h2 {\n  font-size: 18px;\n  font-weight: 400;\n  text-align: center;\n}\n.Characters-card h3 {\n  font-size: 18px;\n  font-weight: 400;\n  text-align: left;\n  margin: 20px;\n}\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { useFetch } from '../hooks/useFetch';\n\nexport const Episode = () => {\n  let { id } = useParams();\n  const { data: episode } = useFetch(`${API}/episode/${id}`);\n  return (\n    <EpisodeCard>\n      <h3>Name: <span>{episode?.name}</span> </h3>\n      <h3>Air date: <span>{episode?.air_date}</span> </h3>\n      <h3>Episode: <span>{episode?.episode}</span> </h3>\n      <h3>Created: <span>{episode?.created.slice(0, 10)}</span> </h3>\n    </EpisodeCard>\n  )\n}\n\nconst EpisodeCard = styled.article`\n  text-decoration: none;\n  box-shadow: 8px 14px 38px rgba(39, 44, 49, 0.06),\n    1px 3px 8px rgba(39, 44, 49, 0.03);\n  border-radius: 5px;\n  margin: 0 0 20px 0;\n  padding: 0px 20px;\n  display: block;\n  animation-duration: 2s;\n  animation-name: fade;\n`;\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Header } from './Header';\nimport styled from 'styled-components';\nimport { Home } from './Home';\nimport { CharacterId } from './CharacterId';\nimport { Episode } from './Episode';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <AppComponent>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/character/:id\" component={CharacterId} />\n          <Route exact path=\"/episode/:id\" component={Episode} />\n        </Switch>\n      </AppComponent>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n\nconst AppComponent = styled.main`\n    padding: 10px;\n    grid-template-columns: minmax(auto, 976px);\n    display: grid;\n    justify-content: center;\n`;","import { createGlobalStyle } from 'styled-components';\nexport const GlobalStyle = createGlobalStyle`\n  body{\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n    color: #3c484e;\n    font-family: 'Coming Soon', cursive;\n  }\n  @keyframes fade {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { GlobalStyle } from './globalStyle';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('app')\n);\n\n\n"],"sourceRoot":""}